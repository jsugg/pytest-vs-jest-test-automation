name: Run Tests on Pull Requests

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  jest-javascript-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: |
          jest/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('jest/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies and Run JavaScript Jest tests
      run: |
        npm ci
        npx playwright install
        npm run test
      working-directory: jest

  jest-typescript-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: jest/package-lock.json
    - name: Install dependencies and Run TypeScript Jest tests
      run: |
        npm ci
        npx playwright install
        npm run test:ts
      working-directory: jest
      
  pytest-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip downloads and installed packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          !~/.cache/pip/log
          ~/venv
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ matrix.python-version }}-
    - name: Install dependencies and Run Pytest tests
      run: |
        python -m venv ~/venv
        source ~/venv/bin/activate
        pip install --no-cache-dir -r requirements.txt
        pytest -n 4
      working-directory: pytest